{"version":3,"sources":["styles/index.scss"],"names":[],"mappings":"AAkBQ,uFAAA,CAmDR,UAEE,WAAA,CACA,UAAA,CACA,QAAA,CACA,SAAA,CACA,6BAGF,KACE,YAAA,CACA,qBAAA,CACA,wBAAA,CACA,sGAAA,CAEA,+BAAA,CACA,yCACE,CAEF,YAAA,CACA,sBAAA,CACA,mBAGF,OAEE,u3mEAAA,CAEA,UAvCY,CAwCZ,8BAAA,CACA,cAAA,CACA,eAAA,CACA,iBAAA,CACA,kBAGF,QACE,cAAA,CACA,cAAA,CACA,cAEA,UACE","file":"src.ebaeb1a4.css","sourceRoot":"../../003 - Comics Style Text Outline and Oblique Shadow/src","sourcesContent":["/*\n * SASS implementation of text-stroke-generator by Owumaro\n * https://github.com/Owumaro/text-stroke-generator/blob/master/index.js#L42\n *\n * Note that @use 'sass:math'; is not supported by node-sass, highly recommended\n * to use dart-sass in-order to enjoy built-in modules.\n *\n * In case dart-sass cannot be used (e.g. an non-ejected Create React App),\n * You can implement your own sin and cos function with Taylor Expansion:\n * https://gist.github.com/kamikat/c4d472ce3c61feec6376\n */\n\n@use 'sass:math';\n\n//===================================\n//             Fonts\n//===================================\n\n@import url('https://fonts.googleapis.com/css2?family=Rubik:wght@300;800&display=swap');\n\n//===================================\n//            Functions\n//===================================\n\n// Generate text outline\n@function text-outline($stroke-width, $stroke-color, $stroke-offset-x: 0, $stroke-offset-y: 0) {\n  $angle: 0;\n  $result: null;\n  $blur-radius: 0;\n\n  @while $angle < (2 * math.$pi) {\n    $offset-x: math.cos($angle) * $stroke-width * 1px + $stroke-offset-x;\n    $offset-y: math.sin($angle) * $stroke-width * 1px + $stroke-offset-y;\n    $current-result: $offset-x $offset-y $blur-radius $stroke-color;\n    $result: $result, $current-result;\n    $angle: $angle + math.div(1, $stroke-width);\n  }\n\n  @return $result;\n}\n\n// Generate text shadow in respect to text outline\n@function oblique-text-shadow($width, $expand, $color, $step: 0.25) {\n  $layer: 0;\n  $result: null;\n\n  @while $layer < $width {\n    $current-layer: text-outline($expand, $color, $layer, $layer);\n    $result: $result, $current-layer;\n    $layer: $layer + $step;\n  }\n\n  @return $result;\n}\n\n//===================================\n//             Variables\n//===================================\n$color-white: #ffffff;\n$color-black: #000000;\n$color-yellow: #ffd200;\n\n$title-border-width: 6;\n$color-title-border: $color-black;\n$color-title-text: $color-white;\n\n//===================================\n//            Main styles\n//===================================\nhtml,\nbody {\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  font-family: 'Rubik', sans-serif;\n}\n\nbody {\n  padding: 2rem;\n  box-sizing: border-box;\n  background-color: lighten($color-yellow, 15%);\n  background-image: radial-gradient($color-yellow 20%, transparent 0),\n    radial-gradient($color-yellow 20%, transparent 0);\n  background-size: 1.25rem 1.25rem;\n  background-position:\n    0 0,\n    0.0625rem 0.0625rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.title {\n  text-align: center;\n  text-shadow: text-outline($title-border-width, $color-title-border),\n    oblique-text-shadow($title-border-width * 2, $title-border-width, $color-title-border);\n  color: $color-title-text;\n  margin: 1.25rem 0 1.25rem $title-border-width * 4 * -1px;\n  font-size: 4rem;\n  font-weight: 800;\n  font-style: italic;\n  text-align: center;\n}\n\n.footer {\n  position: fixed;\n  bottom: 0.625rem;\n  color: darken($color-yellow, 20%);\n\n  a {\n    color: inherit;\n  }\n}\n"]}